package vistas;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FileDialog;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

@SuppressWarnings("serial")
public class FrmPrincipal extends JFrame implements ActionListener  {
	
	private JDesktopPane escritorio;
	private JMenuBar menuBar;
	private JMenu mnArchivo;
	private JMenu mnMantenimiento;
	private JMenu mnConsulta;
	private JMenu mnTransaccion;
	private JMenu mnReporte;
	private JMenu mnAyuda;
	private JMenuItem mniSalir;
	private JMenuItem mniSolucionApelacion;
	private JMenuItem mniResultadoPostulacion;
	private JLabel lblImgFonfo;
	private JMenuItem mniParticipante;
	private JMenuItem mniPropuesta;
	private JMenuItem mniApelacion;
	private JMenuItem mniContratacion;
	private JMenuItem mniConsultaParticipante;
	private JMenuItem mniReporteContratacion;
	private JMenuItem mniQuienesSomos;
	private JMenuItem mniActasPropuestas;
	
	
	public static void main (String [] args) {
		FrmPrincipal prin = new FrmPrincipal();
		prin.setVisible(true);
	}
	
	public FrmPrincipal() {
		setIconImage(Toolkit.getDefaultToolkit().getImage(FrmPrincipal.class.getResource("/imagenes/logo3.jpg")));
		setTitle("FrmPrincipal");
		setBounds(100,100,839,525);
		setLocationRelativeTo(this);
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		escritorio = new JDesktopPane();
		escritorio.setBackground(Color.gray);
		getContentPane().add(escritorio, BorderLayout.CENTER);
		
		lblImgFonfo = new JLabel("");
		lblImgFonfo.setIcon(new ImageIcon(FrmPrincipal.class.getResource("/imagenes/banner2.jpg")));
		lblImgFonfo.setBounds(0, 0, 830, 456);
		escritorio.add(lblImgFonfo);
		
		menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		mnArchivo = new JMenu("Archivo");
		mnArchivo.setIcon(new ImageIcon(FrmPrincipal.class.getResource("/imagenes/iconos_24x24/carpeta.png")));
		menuBar.add(mnArchivo);
		
		mnMantenimiento = new JMenu("Mantenimiento");
		mnMantenimiento.setIcon(new ImageIcon(FrmPrincipal.class.getResource("/imagenes/iconos_24x24/personal-de-mantenimiento.png")));
		menuBar.add(mnMantenimiento);
		
		mnConsulta = new JMenu("Consulta");
		mnConsulta.setIcon(new ImageIcon(FrmPrincipal.class.getResource("/imagenes/iconos_24x24/buscando.png")));
		menuBar.add(mnConsulta);
		
		mnTransaccion = new JMenu("Transacci\u00F3n");
		mnTransaccion.setIcon(new ImageIcon(FrmPrincipal.class.getResource("/imagenes/iconos_24x24/transaccion.png")));
		menuBar.add(mnTransaccion);
		
		mnReporte = new JMenu("Reporte");
		mnReporte.setIcon(new ImageIcon(FrmPrincipal.class.getResource("/imagenes/iconos_24x24/reporte (1).png")));
		menuBar.add(mnReporte);
		
		mnAyuda = new JMenu("Ayuda");
		mnAyuda.setIcon(new ImageIcon(FrmPrincipal.class.getResource("/imagenes/iconos_24x24/mano-amiga.png")));
		menuBar.add(mnAyuda);
		
		mniSalir = new JMenuItem("Salir");
		mniSalir.addActionListener(this);
		mnArchivo.add(mniSalir);
		
		mniResultadoPostulacion = new JMenuItem("Resultado de postulaciones");
		mniResultadoPostulacion.addActionListener(this);
		mnTransaccion.add(mniResultadoPostulacion);
		
		mniActasPropuestas = new JMenuItem("Actas de propuestas");
		mniActasPropuestas.addActionListener(this);
		mnTransaccion.add(mniActasPropuestas);
		
		mniSolucionApelacion = new JMenuItem("Solucion de apelaciones");
		mniSolucionApelacion.addActionListener(this);
		mnTransaccion.add(mniSolucionApelacion);
		
		
		mniContratacion = new JMenuItem ("Contrataciones");
		mniContratacion.addActionListener(this);
		mnMantenimiento.add(mniContratacion);
		
		mniParticipante = new JMenuItem ("Pariticipantes");
		mniParticipante.addActionListener(this);
		mnMantenimiento.add(mniParticipante);
		
		mniPropuesta = new JMenuItem("Propuestas");
		mniPropuesta.addActionListener(this);
		mnMantenimiento.add(mniPropuesta);
		
		mniApelacion = new JMenuItem("Apelaciones");
		mniApelacion.addActionListener(this);
		mnMantenimiento.add(mniApelacion);
		
		
		mniConsultaParticipante = new JMenuItem("Consulta de participantes");
		mniConsultaParticipante.addActionListener(this);
		mnConsulta.add(mniConsultaParticipante);
		
		mniReporteContratacion = new JMenuItem("Reporte de contrataciones");
		mniReporteContratacion.addActionListener(this);
		mnReporte.add(mniReporteContratacion);
		
		mniQuienesSomos = new JMenuItem("Quienes somos");
		mniQuienesSomos.addActionListener(this);
		mnAyuda.add(mniQuienesSomos);
		
	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == mniActasPropuestas) {
			actionPerformedMniActasPropuestas(e);
		}
		if (e.getSource() == mniResultadoPostulacion) {
			actionPerformedMniResultadoPostulacion(e);
		}
		if(e.getSource() == mniSolucionApelacion) {
			actionPerformedMniSolucionApelacion(e);
		}
		if(e.getSource() == mniSalir) {
			actionPerformedMniSalir(e);
		}
		if(e.getSource()==mniParticipante) {
			actionPerformedMniParticipante(e);
		}
		if(e.getSource()==mniPropuesta) {
			actionPerformedMniPostulacion(e);
		}
		if(e.getSource()==mniApelacion) {
			actionPerformedMniApelacion(e);
		}
		if(e.getSource()==mniContratacion) {
			actionPerformedMniContratacion(e);
		}
		if(e.getSource()==mniConsultaParticipante) {
			actionPerformedMniConsultaParticipante(e);
		}
		if(e.getSource()==mniReporteContratacion) {
			actionPerformedMniReporteContratacion(e);
		}
		if(e.getSource()==mniQuienesSomos) {
			actionPerformedMniQuienesSomos(e);
		}
	}
	
	//ARCHIVO
	
	protected void actionPerformedMniSalir(ActionEvent e) {
		
		FileDialog fd = new FileDialog(new Frame(),"SELECCIONA UN ARCHIVO",FileDialog.LOAD);
		fd.setVisible(true);
		
		
		fd.setFilenameFilter(null);
		String file = fd.getFile();
		
		System.out.println(file);
		/**int dialog = (int) JOptionPane.showConfirmDialog(this,"Seguro quiere salir ?", "CERRANDO", JOptionPane.YES_NO_OPTION,2);
		if(dialog == 0) {
			System.exit(0);
		}*/
	}
	
	//MANTENIMIENTO
	
	protected void actionPerformedMniPostulacion(ActionEvent e) {
		FrmPropuestaM post= new FrmPropuestaM ();
		post.setVisible(true);
		escritorio.add(post).setLocation(0,0);
		post.toFront();
	}
	
	protected void actionPerformedMniParticipante(ActionEvent e) {
		FrmParticipante parti= new FrmParticipante ();
		parti.setVisible(true);
		escritorio.add(parti).setLocation(0,0);
		parti.toFront();
		
	}
	
	protected void actionPerformedMniApelacion(ActionEvent e) {
		FrmApelacion apel= new FrmApelacion ();
		apel.setVisible(true);
		escritorio.add(apel).setLocation(0,0);
		apel.toFront();
	}
	
	protected void actionPerformedMniContratacion(ActionEvent e) {
		FrmContratacion contra=new FrmContratacion ();
		contra.setVisible(true);
		escritorio.add(contra).setLocation(0,0);
		contra.toFront();
	}

	
	//CONSULTA
	
	protected void actionPerformedMniConsultaParticipante(ActionEvent e) {
		FrmConsultaParticipante conParti= new FrmConsultaParticipante();
		conParti.setVisible(true);
		escritorio.add(conParti).setLocation(0,0);
		conParti.toFront();
	}	
	
	//TRANSACCION
	
	
	protected void actionPerformedMniResultadoPostulacion(ActionEvent e) {	
		FrmPuntajePropuesta resPos= new FrmPuntajePropuesta();
		resPos.setVisible(true);
		if(JOptionPane.showConfirmDialog(this, "ERES DEL AREA CORRESPONDIENTE", "ACCESO", JOptionPane.YES_NO_OPTION,0)==0) {
			escritorio.add(resPos).setLocation(0,0);
			resPos.toFront();
		} else {
			JOptionPane.showMessageDialog(this, "ACCESO DENEGADO","ERROR",1);
		}
		
	}
	protected void actionPerformedMniSolucionApelacion(ActionEvent e) {
		FrmProyectoPronunciamientoApelacion solApel= new FrmProyectoPronunciamientoApelacion();
		solApel.setVisible(true);
		escritorio.add(solApel).setLocation(0,0);;
		solApel.toFront();
	}
	
	protected void actionPerformedMniActasPropuestas(ActionEvent e) {
		FrmActaPropuesta form = new FrmActaPropuesta();
		form.setVisible(true);
		escritorio.add(form).setLocation(0,0);
		form.toFront();
	}
	
	//REPORTE
	
	protected void actionPerformedMniReporteContratacion(ActionEvent e) {
		FrmReporteContratacion reporContra = new FrmReporteContratacion ();
		reporContra.setVisible(true);
		escritorio.add(reporContra).setLocation(0,0);
		reporContra.toFront();
	}
	
	//AYUDA
	
	protected void actionPerformedMniQuienesSomos(ActionEvent e) {
		FrmAyuda ayuda= new FrmAyuda(this,true);
		ayuda.setVisible(true);
		ayuda.setLocationRelativeTo(this);
	}
	
}
